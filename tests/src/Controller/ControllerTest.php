<?php

namespace Controller;
use Util\HttpRequest as HttpRequest;
use Util\DB as DB;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-04 at 01:28:29.
 */
class ControllerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Controller
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Controller();

        $db =  DB::createInstance('sqlite::memory:');

        $sql = 'DROP TABLE IF EXISTS `game`';
        $db->query($sql);
        
        $sql = 'CREATE TABLE `game` (
                `id` INTEGER PRIMARY KEY AUTOINCREMENT,
                `player1` varchar(50) DEFAULT NULL,
                `player1Choice` varchar(10) DEFAULT NULL,
                `player2` varchar(50) DEFAULT NULL,
                `player2Choice` varchar(10) DEFAULT NULL,
                `gameHash` varchar(16) DEFAULT NULL
                
              )';
        $db->query($sql);
        $sql = "INSERT INTO `game` (`id`, `player1`, `player1Choice`, `player2`, `player2Choice`, `gameHash`)
                VALUES
                (1, 'Ben', 'rock', 'Simon', '', 'hash');";
        $db->query($sql);
        $sql = "INSERT INTO `game` (`id`, `player1`, `player1Choice`, `player2`, `player2Choice`, `gameHash`)
                VALUES
                (2, 'Rob', 'Paper', 'Paul', 'Scissors', 'hash2');";
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers controller\Controller::indexAction
     * @todo   Implement testIndexAction().
     */
    public function testIndexAction() {
        
        $request = HttpRequest::create(array(), array(), array());
        
        $result = $this->object->indexAction($request);
        $this->assertContains('<h1>Play Rock Paper Scissors</h1>', $result);
        
        $request = HttpRequest::create(array(), array('choice'=>'rock', 'opponent'=>'computer'), array('REQUEST_METHOD' => 'POST'));
        $result = $this->object->indexAction($request);
        $this->assertContains('<h1>And the result is', $result);
        
        
        $request = HttpRequest::create(array(), array('choice'=>'rock', 'opponent'=>'friend'), array('REQUEST_METHOD' => 'POST'));
        $result = $this->object->indexAction($request);
        $this->assertContains('<title>Send your friend this link</title>', $result);
    }

    /**
     * @covers controller\Controller::challengeAction
     * @covers controller\Controller::render
     * @todo   Implement testChallengeAction().
     */
    public function testChallengeAction() {
        
        $request = HttpRequest::create(array('id'=>1, 'hash'=>'hash'), array(), array());
        $result = $this->object->challengeAction($request);
        $this->assertContains('Choose your weapon', $result);
        
        
        $request = HttpRequest::create(array('id'=>1, 'hash'=>'hash'), array('choice'=>'rock'), array('REQUEST_METHOD' => 'POST',));
        $result = $this->object->challengeAction($request);
        $this->assertContains('And the result is', $result);
        
        
        $request = HttpRequest::create(array('id'=>1, 'hash'=>'hash'), array(), array());
        $result = $this->object->challengeAction($request);
        $this->assertContains('And the result is', $result);

    }

 

}
